// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

library optimizer;

import 'dart:typed_data' show Uint8List;

import 'package:flame_spatial_grid/src/collisions/optimizer/isolate/flat_buffers/flat_buffers_optimizer.dart';
import 'package:flat_buffers/flat_buffers.dart' as fb;

class Aabb2 {
  Aabb2._(this._bc, this._bcOffset);

  static const fb.Reader<Aabb2> reader = _Aabb2Reader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  Vector2 get min => Vector2.reader.read(_bc, _bcOffset + 0);

  Vector2 get max => Vector2.reader.read(_bc, _bcOffset + 8);

  @override
  String toString() {
    return 'Aabb2{min: $min, max: $max}';
  }

  Aabb2T unpack() => Aabb2T(min: min.unpack(), max: max.unpack());

  static int pack(fb.Builder fbBuilder, Aabb2T? object) {
    if (object == null) return 0;
    return object.pack(fbBuilder);
  }
}

class Aabb2T implements fb.Packable {
  Vector2T min;
  Vector2T max;

  Aabb2T({required this.min, required this.max});

  @override
  int pack(fb.Builder fbBuilder) {
    max.pack(fbBuilder);
    min.pack(fbBuilder);
    return fbBuilder.offset;
  }

  @override
  String toString() {
    return 'Aabb2T{min: $min, max: $max}';
  }
}

class _Aabb2Reader extends fb.StructReader<Aabb2> {
  const _Aabb2Reader();

  @override
  int get size => 16;

  @override
  Aabb2 createObject(fb.BufferContext bc, int offset) => Aabb2._(bc, offset);
}

class Aabb2Builder {
  Aabb2Builder(this.fbBuilder);

  final fb.Builder fbBuilder;

  int finish(fb.StructBuilder min, fb.StructBuilder max) {
    max();
    min();
    return fbBuilder.offset;
  }
}

class Aabb2ObjectBuilder extends fb.ObjectBuilder {
  final Vector2ObjectBuilder _min;
  final Vector2ObjectBuilder _max;

  Aabb2ObjectBuilder({
    required Vector2ObjectBuilder min,
    required Vector2ObjectBuilder max,
  })  : _min = min,
        _max = max;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    _max.finish(fbBuilder);
    _min.finish(fbBuilder);
    return fbBuilder.offset;
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
