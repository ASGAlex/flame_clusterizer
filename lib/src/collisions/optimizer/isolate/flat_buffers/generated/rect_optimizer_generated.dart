// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

library optimizer;

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;


class Rect {
  Rect._(this._bc, this._bcOffset);

  static const fb.Reader<Rect> reader = _RectReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  double get left => const fb.Float32Reader().read(_bc, _bcOffset + 0);
  double get top => const fb.Float32Reader().read(_bc, _bcOffset + 4);
  double get right => const fb.Float32Reader().read(_bc, _bcOffset + 8);
  double get bottom => const fb.Float32Reader().read(_bc, _bcOffset + 12);

  @override
  String toString() {
    return 'Rect{left: $left, top: $top, right: $right, bottom: $bottom}';
  }

  RectT unpack() => RectT(
      left: left,
      top: top,
      right: right,
      bottom: bottom);

  static int pack(fb.Builder fbBuilder, RectT? object) {
    if (object == null) return 0;
    return object.pack(fbBuilder);
  }
}

class RectT implements fb.Packable {
  double left;
  double top;
  double right;
  double bottom;

  RectT({
      required this.left,
      required this.top,
      required this.right,
      required this.bottom});

  @override
  int pack(fb.Builder fbBuilder) {
    fbBuilder.putFloat32(bottom);
    fbBuilder.putFloat32(right);
    fbBuilder.putFloat32(top);
    fbBuilder.putFloat32(left);
    return fbBuilder.offset;
  }

  @override
  String toString() {
    return 'RectT{left: $left, top: $top, right: $right, bottom: $bottom}';
  }
}

class _RectReader extends fb.StructReader<Rect> {
  const _RectReader();

  @override
  int get size => 16;

  @override
  Rect createObject(fb.BufferContext bc, int offset) => 
    Rect._(bc, offset);
}

class RectBuilder {
  RectBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  int finish(double left, double top, double right, double bottom) {
    fbBuilder.putFloat32(bottom);
    fbBuilder.putFloat32(right);
    fbBuilder.putFloat32(top);
    fbBuilder.putFloat32(left);
    return fbBuilder.offset;
  }

}

class RectObjectBuilder extends fb.ObjectBuilder {
  final double _left;
  final double _top;
  final double _right;
  final double _bottom;

  RectObjectBuilder({
    required double left,
    required double top,
    required double right,
    required double bottom,
  })
      : _left = left,
        _top = top,
        _right = right,
        _bottom = bottom;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    fbBuilder.putFloat32(_bottom);
    fbBuilder.putFloat32(_right);
    fbBuilder.putFloat32(_top);
    fbBuilder.putFloat32(_left);
    return fbBuilder.offset;
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
