// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

library optimizer;

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;


class Vector2 {
  Vector2._(this._bc, this._bcOffset);

  static const fb.Reader<Vector2> reader = _Vector2Reader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  double get x => const fb.Float32Reader().read(_bc, _bcOffset + 0);
  double get y => const fb.Float32Reader().read(_bc, _bcOffset + 4);

  @override
  String toString() {
    return 'Vector2{x: $x, y: $y}';
  }

  Vector2T unpack() => Vector2T(
      x: x,
      y: y);

  static int pack(fb.Builder fbBuilder, Vector2T? object) {
    if (object == null) return 0;
    return object.pack(fbBuilder);
  }
}

class Vector2T implements fb.Packable {
  double x;
  double y;

  Vector2T({
      required this.x,
      required this.y});

  @override
  int pack(fb.Builder fbBuilder) {
    fbBuilder.putFloat32(y);
    fbBuilder.putFloat32(x);
    return fbBuilder.offset;
  }

  @override
  String toString() {
    return 'Vector2T{x: $x, y: $y}';
  }
}

class _Vector2Reader extends fb.StructReader<Vector2> {
  const _Vector2Reader();

  @override
  int get size => 8;

  @override
  Vector2 createObject(fb.BufferContext bc, int offset) => 
    Vector2._(bc, offset);
}

class Vector2Builder {
  Vector2Builder(this.fbBuilder);

  final fb.Builder fbBuilder;

  int finish(double x, double y) {
    fbBuilder.putFloat32(y);
    fbBuilder.putFloat32(x);
    return fbBuilder.offset;
  }

}

class Vector2ObjectBuilder extends fb.ObjectBuilder {
  final double _x;
  final double _y;

  Vector2ObjectBuilder({
    required double x,
    required double y,
  })
      : _x = x,
        _y = y;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    fbBuilder.putFloat32(_y);
    fbBuilder.putFloat32(_x);
    return fbBuilder.offset;
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
